[gd_scene load_steps=7 format=3 uid="uid://jrqogsnwupmq"]

[ext_resource type="Texture2D" uid="uid://cpahqiw6tpt4r" path="res://assets/entities/mech/mech.png" id="1_jc80t"]
[ext_resource type="PackedScene" uid="uid://dysjyicry3juk" path="res://entities/properties/health.tscn" id="2_hcl31"]
[ext_resource type="PackedScene" uid="uid://d2y5c2gqbffyq" path="res://entities/properties/weapons/autocannon.tscn" id="3_rkvkb"]

[sub_resource type="GDScript" id="GDScript_gt15b"]
script/source = "extends CharacterBody2D

var type: String = 'mech'
var is_player_controlled: bool = true
@export var movement_speed: float = 300
@onready var rect = $CollisionShape2D.shape.get_rect()

var movement_target_position: Vector2;

func _ready():
	if movement_speed == 0:
		movement_speed = 300
	pass
	
func _physics_process(delta):
	var collision = move_and_collide(velocity * delta)
	rotate_to(delta)
	if collision || global_position.distance_to(movement_target_position) < rect.size.x * 0.2:
		velocity = Vector2(0, 0)
	

func rotate_to(delta):
	var direction = (movement_target_position - global_position)
	var angleTo = self.transform.x.angle_to(direction)
	%AutoCannon.facing_direction = direction
	self.rotate(sign(angleTo) * min(delta * (movement_speed * 0.03), abs(angleTo)))
	
func get_current_destination():
	if global_position.distance_to(movement_target_position) < rect.size.x * 0.2:
		return global_position
	return movement_target_position

func _on_map_01_mouse_click_movement(movement_target: Vector2):
	movement_target_position = movement_target
	var direction = (movement_target - global_position).normalized()
	velocity = direction * movement_speed
	print('char', global_position)
	%AutoCannon.shoot()
	pass 
	
func get_type():
	return self.type
	
func get_is_player_controlled():
	return self.is_player_controlled

func _on_health_entity_death():
	self.queue_free()

func hit(damage: int):
	$Health.decrease_health(damage)

func _on_map_01_space_damage(damage: int):
	$Health.decrease_health(damage)
"

[sub_resource type="SpriteFrames" id="SpriteFrames_oc3nj"]
resource_name = "MECH"
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("1_jc80t")
}],
"loop": true,
"name": &"default",
"speed": 5.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_tghwv"]
size = Vector2(38, 31)

[node name="EntityPcMech" type="CharacterBody2D"]
position = Vector2(564, 309)
slide_on_ceiling = false
script = SubResource("GDScript_gt15b")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
z_index = 1
position = Vector2(0, 6)
rotation = 4.71238
scale = Vector2(0.0771484, 0.0771484)
sprite_frames = SubResource("SpriteFrames_oc3nj")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(3.5, 6)
rotation = 1.57079
shape = SubResource("RectangleShape2D_tghwv")

[node name="Health" parent="." instance=ExtResource("2_hcl31")]

[node name="AutoCannon" parent="." instance=ExtResource("3_rkvkb")]
unique_name_in_owner = true
z_index = 5
position = Vector2(16, 31)
rotation = 1.57079
scale = Vector2(0.380016, 0.421405)

[connection signal="entity_death" from="Health" to="." method="_on_health_entity_death"]
